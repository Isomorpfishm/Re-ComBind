# -*- coding: utf-8 -*-
"""calc_angles.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1RydgOEuznWpO_BYH105A1gd3E1FzdwI8
"""

import pandas as pd
import numpy as np
import re



#Accessing a text file

df_DH = pd.DataFrame()

file = open(r"/home/yuyang/temp02/vina/Trial01_hbond_D-H_coords.txt","r")

#Repeat for each line in the text file
for line in file:
  
    #Let's split the line into an array using the "," as a separator:
    fields = line.split(",")
  
    df_DH = df_DH.append(pd.Series(fields), ignore_index=True)


print("DataFrame of Donor-Hydrogen has shape ", df_DH.shape)

for i in range(df_DH.shape[0]):
    for j in range(df_DH.shape[1]):
        s = str(df_DH.iloc[i, j])
        for k in s.split():
            try:
                #trying to convert i to float
                df_DH.iloc[i, j] = float(k)
                #break the loop if i is the first string that's successfully converted
                break
            except:
                continue





df_A = pd.DataFrame()

file = open(r"/home/yuyang/temp02/vina/Trial01_hbond_A_coords.txt","r")

for line in file:
    fields = line.split(",")
    df_A = df_A.append(pd.Series(fields), ignore_index=True)


assert(df_DH.shape[0] == df_A.shape[0])
print("DataFrame of Acceptor has shape ", df_A.shape)

for i in range(df_A.shape[0]):
    for j in range(df_A.shape[1]):
        s = str(df_A.iloc[i, j])
        for k in s.split():
            try:
                #trying to convert i to float
                df_A.iloc[i, j] = float(k)
                #break the loop if i is the first string that's successfully converted
                break
            
            except:
                continue



angle_list = []

for i in range(df_DH.shape[0]):
    small_list = []

    series = df_DH.iloc[i, ]
    series = series[df_DH.iloc[i, ].notnull()]
    a = series[3:].values.reshape(-1, 6)
    b = pd.DataFrame(a, columns=["x_D", "y_D", "z_D", "x_H", "y_H", "z_H"])

    series = df_A.iloc[i, ]
    series = series[df_A.iloc[i, ].notnull()]
    p = series[3:].values.reshape(-1, 3)
    q = pd.DataFrame(p, columns=["x_A", "y_A", "z_A"])

    for j in range(b.shape[0]):
        point1 = np.array(b.iloc[j, ][:3])
        point2 = np.array(b.iloc[j, ][3:])
        point3 = np.array(q.iloc[j, ])

        point21 = point2 - point1
        point23 = point2 - point3

        cosine_angle = np.dot(point21, point23) / (np.linalg.norm(point21) * np.linalg.norm(point23))
        angle = np.arccos(cosine_angle)
        angle = round(np.degrees(angle), 2)

        small_list.append(angle)

    angle_list.append(small_list)

print("Angles for the first model: ", angle_list[0])


filename = r'/home/yuyang/temp02/vina/Trial01_hbond_angles.txt'
textfile = open(filename, "w")


for element in angle_list:
    textfile.write(str(element) + "\n")
textfile.close()


with open(filename, 'r') as f:
    text = f.read()
    patn = re.sub(r"[\([{})\]]", "", text)
 
 
with open(filename, 'w') as my_file:
    my_file.write(patn)


